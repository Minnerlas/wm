#compdef rsm

# Copy to $HOME/.local/share/zsh/functions/Completion

_rsm_all_services() {
	local IFS=$'\n'
	# Extract names and email addresses from gpg --list-keys
	_values 'active services' $(ls -1 "$SVDIR")
}

_rsm_active_services() {
	local IFS=$'\n'
	# Extract names and email addresses from gpg --list-keys
	_values 'active services' $(ls -1 "$RUNSVDIR")
}

_rsm() {
	local -a args subcommands cmd havesubcmd tmpwords lastcmd SVDIR RUNSVDIR
	SVDIR='/etc/runit/sv'
	RUNSVDIR='/etc/runit/runsvdir/default'
	havesubcmd=NONE
	tmpwords=("${words[@]}")

	while true
	do
		cmd=${tmpwords[2]}
		case $cmd in
			-c)
				havesubcmd=OPTARG
				shift tmpwords
				;;
			-d)
				havesubcmd=OPTARG
				lastcmd=-d
				shift tmpwords
				;;
			-*)
				havesubcmd=OPT
				shift tmpwords
				;;
			"")
				break
				;;
			*)
				if [ "$havesubcmd" = OPTARG ]
				then
					if [ "$lastcmd" = "-d" ]
					then
						SVDIR="$cmd"
					fi
					havesubcmd=OPT
					shift tmpwords
				else
					havesubcmd=SUBCMD
					break
				fi
				;;
		esac
	done

	if [ "$havesubcmd" = SUBCMD ]
	then
		# havesubcmd=NONE
		# while true
		# do
		# 	cmd=${words[2]}
		# 	case $cmd in
		# 		-c|-d)
		# 			havesubcmd=OPTARG
		# 			shift words
		# 			;;
		# 		-*)
		# 			havesubcmd=OPT
		# 			shift words
		# 			;;
		# 		"")
		# 			break
		# 			;;
		# 		*)
		# 			if [ "$havesubcmd" = OPTARG ]
		# 			then
		# 				havesubcmd=OPT
		# 				shift words
		# 			else
		# 				break
		# 			fi
		# 			;;
		# 	esac
		# done

		words=("${tmpwords[@]}")

		cmd=${words[2]}
		(( CURRENT-- ))
		shift words
		case "$cmd" in
			status)
				_arguments : \
					'-t[Enables tree mode (process tree)]' \
					'-l[Enables log mode (show log processes)]'
				_rsm_active_services
				;;
			enable|logs|alllogs|errorlogs)
				_rsm_all_services
				;;
			disable|start|stop|restart|reload)
				_rsm_active_services
				;;
		esac
	else
		subcommands=(
			'status:Default subcommand, show process status'
			'enable:Enable the service(s) (remove the "down" file, does not start service'
			'disable:Disable the service(s) (create the "down" file, does not stop service'
			'start:Start the service'
			'stop:Stop the service'
			'restart:Restart the service'
			'reload:Reload the service (send SIGHUP)'
			"logs:Outputs the service's logfilenames and their access & error logs from /var/log/<serice>/"
			'alllogs:The same like logs <service>'
			"errorlogs:Outputs the service's logfilenames and their errorlogs from /var/log/<service>/"
		)
		if [ "$havesubcmd" = NONE ] || [ "$havesubcmd" = OPT ]
		then
			_describe -t commands 'rsm' subcommands
		fi
		_arguments : \
			'-c[Enable/disable color output, defaults to auto]:Enable color:(yes no auto)' \
			'-d[Directory to look into, defaults to env SVDIR or /run/runit/service is unset]:directory:_files -/' \
			'-h[Print this message and exit]' \
			"-l[Show log processes, this is a shortcut for 'status -l']" \
			"-t[Tree view, this is a shortcut for 'status -t']" \
			"-u[User mode, this is a shortcut for '-d ~/runit/service']" \
			'-v[Increase verbosity]' \
			'-V[Print the version number and exit]'
		if [ "$havesubcmd" = OPTARG ]
		then
			_describe -t commands 'rsm' subcommands
		fi
	fi
	return 0
}

_rsm
